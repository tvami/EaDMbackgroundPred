CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 10 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 10 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 1.5, Sigma for expected limits = 0.76532
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -22292.8 (r=1.54811e-05)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -22283.2 (r=1.57026e-08)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.495628:	q_mu = 31.97353	q_A  = 28.88127	Pmu = 0.00000	1-Pb  = 0.38679	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.247822:	q_mu = 9.68187	q_A  = 8.22666	Pmu = 0.00090	1-Pb  = 0.39987	CLs  = 0.00225
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.123919:	q_mu = 2.90690	q_A  = 2.21290	Pmu = 0.04264	1-Pb  = 0.40778	CLs  = 0.10457
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.685870:	q_mu = 5.86443	q_A  = 4.79660	Pmu = 0.00747	1-Pb  = 0.40370	CLs  = 0.01850
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.427809:	q_mu = 4.39366	q_A  = 3.49935	Pmu = 0.01744	1-Pb  = 0.40554	CLs  = 0.04301
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.325824:	q_mu = 3.86479	q_A  = 3.03818	Pmu = 0.02384	1-Pb  = 0.40628	CLs  = 0.05869
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.367878:	q_mu = 4.07905	q_A  = 3.22460	Pmu = 0.02099	1-Pb  = 0.40597	CLs  = 0.05171
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.388632:	q_mu = 4.18681	q_A  = 3.31857	Pmu = 0.01970	1-Pb  = 0.40582	CLs  = 0.04854
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.376717:	q_mu = 4.12478	q_A  = 3.26445	Pmu = 0.02043	1-Pb  = 0.40591	CLs  = 0.05034
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.380884:	q_mu = 4.14642	q_A  = 3.28333	Pmu = 0.02017	1-Pb  = 0.40588	CLs  = 0.04971
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.378505:	q_mu = 4.13405	q_A  = 3.27254	Pmu = 0.02032	1-Pb  = 0.40590	CLs  = 0.05007
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379339:	q_mu = 4.13838	q_A  = 3.27632	Pmu = 0.02027	1-Pb  = 0.40589	CLs  = 0.04994
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.378864:	q_mu = 4.13591	q_A  = 3.27416	Pmu = 0.02030	1-Pb  = 0.40589	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379031:	q_mu = 4.13678	q_A  = 3.27492	Pmu = 0.02029	1-Pb  = 0.40589	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.378936:	q_mu = 4.13628	q_A  = 3.27449	Pmu = 0.02030	1-Pb  = 0.40589	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.378970:	q_mu = 4.13646	q_A  = 3.27464	Pmu = 0.02029	1-Pb  = 0.40589	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.378951:	q_mu = 4.13636	q_A  = 3.27455	Pmu = 0.02029	1-Pb  = 0.40589	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.378958:	q_mu = 4.13639	q_A  = 3.27458	Pmu = 0.02029	1-Pb  = 0.40589	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.378954:	q_mu = 4.13637	q_A  = 3.27457	Pmu = 0.02029	1-Pb  = 0.40589	CLs  = 0.05000
