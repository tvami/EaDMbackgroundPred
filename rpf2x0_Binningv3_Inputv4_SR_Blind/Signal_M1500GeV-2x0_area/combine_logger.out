CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 10 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 10 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 1.5, Sigma for expected limits = 0.76532
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -2144.51 (r=0.00189732)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -2150.26 (r=0.0010288)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.201897:	q_mu = 3.26706	q_A  = 2.51893	Pmu = 0.03417	1-Pb  = 0.40684	CLs  = 0.08398
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.403795:	q_mu = 10.88054	q_A  = 9.32207	Pmu = 0.00047	1-Pb  = 0.39928	CLs  = 0.00117
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.202846:	q_mu = 3.26585	q_A  = 2.52119	Pmu = 0.03420	1-Pb  = 0.40730	CLs  = 0.08398
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.803320:	q_mu = 6.59331	q_A  = 5.44659	Pmu = 0.00495	1-Pb  = 0.40297	CLs  = 0.01228
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.503083:	q_mu = 4.80227	q_A  = 3.85887	Pmu = 0.01374	1-Pb  = 0.40512	CLs  = 0.03393
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.340251:	q_mu = 3.94190	q_A  = 3.10137	Pmu = 0.02277	1-Pb  = 0.40569	CLs  = 0.05612
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.402686:	q_mu = 4.25931	q_A  = 3.38307	Pmu = 0.01888	1-Pb  = 0.40586	CLs  = 0.04651
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.370954:	q_mu = 4.09377	q_A  = 3.23849	Pmu = 0.02081	1-Pb  = 0.40608	CLs  = 0.05126
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.383785:	q_mu = 4.16032	q_A  = 3.29656	Pmu = 0.02001	1-Pb  = 0.40599	CLs  = 0.04929
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.377468:	q_mu = 4.12747	q_A  = 3.26789	Pmu = 0.02040	1-Pb  = 0.40604	CLs  = 0.05025
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.380042:	q_mu = 4.14083	q_A  = 3.27955	Pmu = 0.02024	1-Pb  = 0.40602	CLs  = 0.04986
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.378780:	q_mu = 4.13427	q_A  = 3.27383	Pmu = 0.02032	1-Pb  = 0.40603	CLs  = 0.05005
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379296:	q_mu = 4.13694	q_A  = 3.27617	Pmu = 0.02029	1-Pb  = 0.40603	CLs  = 0.04997
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379045:	q_mu = 4.13563	q_A  = 3.27503	Pmu = 0.02031	1-Pb  = 0.40603	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379148:	q_mu = 4.13617	q_A  = 3.27550	Pmu = 0.02030	1-Pb  = 0.40603	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379098:	q_mu = 4.13591	q_A  = 3.27527	Pmu = 0.02030	1-Pb  = 0.40603	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379119:	q_mu = 4.13602	q_A  = 3.27536	Pmu = 0.02030	1-Pb  = 0.40603	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379109:	q_mu = 4.13597	q_A  = 3.27532	Pmu = 0.02030	1-Pb  = 0.40603	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.379114:	q_mu = 4.13599	q_A  = 3.27534	Pmu = 0.02030	1-Pb  = 0.40603	CLs  = 0.05000
