CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 10 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 10 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[415] : (in function: runLimitExpected) - [WARNING] Best fit of asimov dataset is at r = 0.037887 (0.001894 times rMax), while it should be at zero
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 10.125, Sigma for expected limits = 5.16591
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -539.823 (r=3.37881e-06)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -537.285 (r=8.25436e-08)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 15.794998:	q_mu = 11.95703	q_A  = 9.23179	Pmu = 0.00024	1-Pb  = 0.32691	CLs  = 0.00075
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 7.897500:	q_mu = 3.73176	q_A  = 2.35326	Pmu = 0.02366	1-Pb  = 0.32661	CLs  = 0.07246
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 11.846249:	q_mu = 7.29925	q_A  = 5.24351	Pmu = 0.00308	1-Pb  = 0.32676	CLs  = 0.00944
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 9.871875:	q_mu = 5.37715	q_A  = 3.65904	Pmu = 0.00909	1-Pb  = 0.32668	CLs  = 0.02782
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.904571:	q_mu = 4.53620	q_A  = 2.98423	Pmu = 0.01475	1-Pb  = 0.32664	CLs  = 0.04516
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.529712:	q_mu = 4.22826	q_A  = 2.74079	Pmu = 0.01766	1-Pb  = 0.32663	CLs  = 0.05405
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.734752:	q_mu = 4.39586	q_A  = 2.87309	Pmu = 0.01601	1-Pb  = 0.32665	CLs  = 0.04901
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.660174:	q_mu = 4.33439	q_A  = 2.82445	Pmu = 0.01659	1-Pb  = 0.32664	CLs  = 0.05080
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.701424:	q_mu = 4.36826	q_A  = 2.85123	Pmu = 0.01627	1-Pb  = 0.32664	CLs  = 0.04980
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.686604:	q_mu = 4.35604	q_A  = 2.84156	Pmu = 0.01638	1-Pb  = 0.32664	CLs  = 0.05016
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.694880:	q_mu = 4.36283	q_A  = 2.84693	Pmu = 0.01632	1-Pb  = 0.32664	CLs  = 0.04996
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.691945:	q_mu = 4.36040	q_A  = 2.84500	Pmu = 0.01634	1-Pb  = 0.32664	CLs  = 0.05003
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.693614:	q_mu = 4.36176	q_A  = 2.84607	Pmu = 0.01633	1-Pb  = 0.32664	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.693049:	q_mu = 4.36128	q_A  = 2.84569	Pmu = 0.01633	1-Pb  = 0.32664	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.693280:	q_mu = 4.36146	q_A  = 2.84582	Pmu = 0.01633	1-Pb  = 0.32664	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.693408:	q_mu = 4.36155	q_A  = 2.84589	Pmu = 0.01633	1-Pb  = 0.32664	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.693356:	q_mu = 4.36150	q_A  = 2.84585	Pmu = 0.01633	1-Pb  = 0.32664	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 8.693379:	q_mu = 4.36151	q_A  = 2.84586	Pmu = 0.01633	1-Pb  = 0.32664	CLs  = 0.05000
