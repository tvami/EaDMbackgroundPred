CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 10 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 10 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.00122452, Sigma for expected limits = 0.000624766
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -24741 (r=0.0904368)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -24643.3 (r=0.0904259)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.290437:	q_mu = 23107.13308	q_A  = 25759.03600	Pmu = 0.00000	1-Pb  = 1.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.690437:	q_mu = 7399.35215	q_A  = 10950.85886	Pmu = 0.00000	1-Pb  = 1.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.390437:	q_mu = 0.00000	q_A  = 4264.17745	Pmu = 0.50000	1-Pb  = 1.00000	CLs  = 0.50000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.540437:	q_mu = 3585.09814	q_A  = 7495.78328	Pmu = 0.00000	1-Pb  = 1.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.465437:	q_mu = 1712.22350	q_A  = 5843.31088	Pmu = 0.00000	1-Pb  = 1.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.427937:	q_mu = 787.61590	q_A  = 5042.99986	Pmu = 0.00000	1-Pb  = 1.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.409187:	q_mu = 328.87795	q_A  = 4650.65899	Pmu = 0.00000	1-Pb  = 1.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.399812:	q_mu = 100.49600	q_A  = 4456.65165	Pmu = 0.00000	1-Pb  = 1.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.395124:	q_mu = 0.00000	q_A  = 4360.21837	Pmu = 0.50000	1-Pb  = 1.00000	CLs  = 0.50000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.397468:	q_mu = 43.50853	q_A  = 4408.38655	Pmu = 0.00000	1-Pb  = 1.00000	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.396296:	q_mu = 15.03138	q_A  = 4384.29027	Pmu = 0.00005	1-Pb  = 1.00000	CLs  = 0.00005
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.395710:	q_mu = 0.79693	q_A  = 4372.25127	Pmu = 0.18601	1-Pb  = 1.00000	CLs  = 0.18601
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.396003:	q_mu = 7.91381	q_A  = 4378.27001	Pmu = 0.00245	1-Pb  = 1.00000	CLs  = 0.00245
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.395857:	q_mu = 4.35527	q_A  = 4375.26045	Pmu = 0.01845	1-Pb  = 1.00000	CLs  = 0.01845
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.395784:	q_mu = 2.57609	q_A  = 4373.75581	Pmu = 0.05424	1-Pb  = 1.00000	CLs  = 0.05424
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.395803:	q_mu = 3.03944	q_A  = 4374.14766	Pmu = 0.04063	1-Pb  = 1.00000	CLs  = 0.04063
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.395792:	q_mu = 2.77330	q_A  = 4373.92258	Pmu = 0.04792	1-Pb  = 1.00000	CLs  = 0.04792
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.395788:	q_mu = 2.67984	q_A  = 4373.84356	Pmu = 0.05081	1-Pb  = 1.00000	CLs  = 0.05081
