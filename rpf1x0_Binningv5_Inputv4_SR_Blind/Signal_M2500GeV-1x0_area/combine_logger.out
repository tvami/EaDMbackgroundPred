CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 8 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 8 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 1.28906, Sigma for expected limits = 0.657697
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -619.565 (r=1.21775e-06)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -620.785 (r=9.43338e-07)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.333550:	q_mu = 31.29485	q_A  = 32.67701	Pmu = 0.00000	1-Pb  = 0.54863	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.166776:	q_mu = 9.89297	q_A  = 9.99453	Pmu = 0.00083	1-Pb  = 0.50642	CLs  = 0.00164
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.083388:	q_mu = 3.01796	q_A  = 2.77420	Pmu = 0.04104	1-Pb  = 0.47083	CLs  = 0.08716
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.625082:	q_mu = 6.04340	q_A  = 5.92477	Pmu = 0.00698	1-Pb  = 0.49028	CLs  = 0.01423
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.354235:	q_mu = 4.41929	q_A  = 4.22348	Pmu = 0.01774	1-Pb  = 0.48100	CLs  = 0.03689
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.223431:	q_mu = 3.71363	q_A  = 3.49060	Pmu = 0.02693	1-Pb  = 0.47620	CLs  = 0.05655
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.279734:	q_mu = 4.01087	q_A  = 3.79878	Pmu = 0.02256	1-Pb  = 0.47830	CLs  = 0.04718
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.254017:	q_mu = 3.87391	q_A  = 3.65662	Pmu = 0.02447	1-Pb  = 0.47735	CLs  = 0.05127
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.265363:	q_mu = 3.93407	q_A  = 3.71898	Pmu = 0.02361	1-Pb  = 0.47776	CLs  = 0.04943
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.260241:	q_mu = 3.90684	q_A  = 3.69075	Pmu = 0.02400	1-Pb  = 0.47757	CLs  = 0.05025
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.262516:	q_mu = 3.91892	q_A  = 3.70327	Pmu = 0.02383	1-Pb  = 0.47766	CLs  = 0.04989
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.261493:	q_mu = 3.91349	q_A  = 3.69764	Pmu = 0.02391	1-Pb  = 0.47762	CLs  = 0.05005
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.261948:	q_mu = 3.91590	q_A  = 3.70014	Pmu = 0.02387	1-Pb  = 0.47764	CLs  = 0.04998
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.261743:	q_mu = 3.91482	q_A  = 3.69902	Pmu = 0.02389	1-Pb  = 0.47763	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.261834:	q_mu = 3.91530	q_A  = 3.69952	Pmu = 0.02388	1-Pb  = 0.47763	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.261793:	q_mu = 3.91508	q_A  = 3.69929	Pmu = 0.02388	1-Pb  = 0.47763	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.261812:	q_mu = 3.91518	q_A  = 3.69939	Pmu = 0.02388	1-Pb  = 0.47763	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.261803:	q_mu = 3.91514	q_A  = 3.69935	Pmu = 0.02388	1-Pb  = 0.47763	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.261807:	q_mu = 3.91515	q_A  = 3.69937	Pmu = 0.02388	1-Pb  = 0.47763	CLs  = 0.05000
