CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 8 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 8 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 1.39453, Sigma for expected limits = 0.711509
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -644.937 (r=6.62294e-06)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -631 (r=1.55367e-08)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200007:	q_mu = 9.23429	q_A  = 2.90116	Pmu = 0.00018	1-Pb  = 0.03151	CLs  = 0.00583
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600007:	q_mu = 4.05836	q_A  = 0.76856	Pmu = 0.00295	1-Pb  = 0.03031	CLs  = 0.09743
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.900007:	q_mu = 6.52209	q_A  = 1.68038	Pmu = 0.00078	1-Pb  = 0.03091	CLs  = 0.02518
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.778351:	q_mu = 5.49138	q_A  = 1.27159	Pmu = 0.00136	1-Pb  = 0.03067	CLs  = 0.04420
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.720436:	q_mu = 5.01562	q_A  = 1.09544	Pmu = 0.00175	1-Pb  = 0.03055	CLs  = 0.05740
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.744912:	q_mu = 5.21553	q_A  = 1.16844	Pmu = 0.00157	1-Pb  = 0.03060	CLs  = 0.05142
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.756567:	q_mu = 5.31138	q_A  = 1.20400	Pmu = 0.00149	1-Pb  = 0.03063	CLs  = 0.04879
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.749890:	q_mu = 5.25637	q_A  = 1.18352	Pmu = 0.00154	1-Pb  = 0.03061	CLs  = 0.05028
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.752229:	q_mu = 5.27559	q_A  = 1.19065	Pmu = 0.00152	1-Pb  = 0.03062	CLs  = 0.04976
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.750896:	q_mu = 5.26463	q_A  = 1.18658	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.05006
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.751365:	q_mu = 5.26848	q_A  = 1.18801	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.04995
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.751099:	q_mu = 5.26629	q_A  = 1.18719	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.751193:	q_mu = 5.26706	q_A  = 1.18748	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.751140:	q_mu = 5.26662	q_A  = 1.18732	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.751159:	q_mu = 5.26678	q_A  = 1.18737	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.751148:	q_mu = 5.26669	q_A  = 1.18734	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.751152:	q_mu = 5.26672	q_A  = 1.18735	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.751150:	q_mu = 5.26671	q_A  = 1.18735	Pmu = 0.00153	1-Pb  = 0.03061	CLs  = 0.05000
