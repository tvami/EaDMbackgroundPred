CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.806641, Sigma for expected limits = 0.411559
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -3628.09 (r=0.000418562)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -3628.03 (r=0.00163936)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.735239:	q_mu = 29.52869	q_A  = 28.71749	Pmu = 0.00000	1-Pb  = 0.46983	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.367829:	q_mu = 10.15662	q_A  = 9.73418	Pmu = 0.00072	1-Pb  = 0.47301	CLs  = 0.00152
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.684124:	q_mu = 3.14966	q_A  = 2.84442	Pmu = 0.03778	1-Pb  = 0.46395	CLs  = 0.08143
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.025976:	q_mu = 6.25854	q_A  = 5.94390	Pmu = 0.00617	1-Pb  = 0.47428	CLs  = 0.01300
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.855050:	q_mu = 4.57458	q_A  = 4.27321	Pmu = 0.01617	1-Pb  = 0.47095	CLs  = 0.03435
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.761380:	q_mu = 3.73838	q_A  = 3.45688	Pmu = 0.02650	1-Pb  = 0.46983	CLs  = 0.05640
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.798305:	q_mu = 4.06003	q_A  = 3.76959	Pmu = 0.02188	1-Pb  = 0.47019	CLs  = 0.04654
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.779892:	q_mu = 3.89845	q_A  = 3.61206	Pmu = 0.02408	1-Pb  = 0.46997	CLs  = 0.05125
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.787337:	q_mu = 3.96341	q_A  = 3.67538	Pmu = 0.02317	1-Pb  = 0.47006	CLs  = 0.04930
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.783670:	q_mu = 3.93133	q_A  = 3.64412	Pmu = 0.02362	1-Pb  = 0.47002	CLs  = 0.05025
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.785163:	q_mu = 3.94436	q_A  = 3.65683	Pmu = 0.02344	1-Pb  = 0.47004	CLs  = 0.04986
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.784431:	q_mu = 3.93796	q_A  = 3.65059	Pmu = 0.02352	1-Pb  = 0.47003	CLs  = 0.05005
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.784730:	q_mu = 3.94056	q_A  = 3.65314	Pmu = 0.02349	1-Pb  = 0.47003	CLs  = 0.04997
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.784584:	q_mu = 3.93928	q_A  = 3.65189	Pmu = 0.02351	1-Pb  = 0.47003	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.784645:	q_mu = 3.93980	q_A  = 3.65241	Pmu = 0.02350	1-Pb  = 0.47003	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.784616:	q_mu = 3.93955	q_A  = 3.65216	Pmu = 0.02350	1-Pb  = 0.47003	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.784628:	q_mu = 3.93965	q_A  = 3.65226	Pmu = 0.02350	1-Pb  = 0.47003	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.784623:	q_mu = 3.93960	q_A  = 3.65222	Pmu = 0.02350	1-Pb  = 0.47003	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.784626:	q_mu = 3.93962	q_A  = 3.65224	Pmu = 0.02350	1-Pb  = 0.47003	CLs  = 0.05000
