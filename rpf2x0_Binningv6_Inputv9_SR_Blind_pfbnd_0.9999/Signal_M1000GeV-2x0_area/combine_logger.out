CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.816406, Sigma for expected limits = 0.416541
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -18305.7 (r=5.57274e-06)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -18305.2 (r=0.000257801)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.524939:	q_mu = 24.20884	q_A  = 23.71901	Pmu = 0.00000	1-Pb  = 0.47995	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.262472:	q_mu = 8.57558	q_A  = 8.13045	Pmu = 0.00170	1-Pb  = 0.46889	CLs  = 0.00362
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.631239:	q_mu = 2.77375	q_A  = 2.50816	Pmu = 0.04770	1-Pb  = 0.46659	CLs  = 0.10223
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.946856:	q_mu = 5.37780	q_A  = 4.99631	Pmu = 0.01015	1-Pb  = 0.46600	CLs  = 0.02179
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.811195:	q_mu = 4.16934	q_A  = 3.80387	Pmu = 0.02047	1-Pb  = 0.46268	CLs  = 0.04425
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.754209:	q_mu = 3.69923	q_A  = 3.34565	Pmu = 0.02707	1-Pb  = 0.46150	CLs  = 0.05865
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.780034:	q_mu = 3.90905	q_A  = 3.54943	Pmu = 0.02388	1-Pb  = 0.46198	CLs  = 0.05170
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.791619:	q_mu = 4.00525	q_A  = 3.64297	Pmu = 0.02256	1-Pb  = 0.46220	CLs  = 0.04881
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.785413:	q_mu = 3.95356	q_A  = 3.59269	Pmu = 0.02326	1-Pb  = 0.46208	CLs  = 0.05034
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.787740:	q_mu = 3.97288	q_A  = 3.61148	Pmu = 0.02300	1-Pb  = 0.46212	CLs  = 0.04976
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.786502:	q_mu = 3.96258	q_A  = 3.60145	Pmu = 0.02314	1-Pb  = 0.46210	CLs  = 0.05007
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.786968:	q_mu = 3.96645	q_A  = 3.60521	Pmu = 0.02308	1-Pb  = 0.46211	CLs  = 0.04995
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.786721:	q_mu = 3.96439	q_A  = 3.60320	Pmu = 0.02311	1-Pb  = 0.46210	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.786816:	q_mu = 3.96517	q_A  = 3.60395	Pmu = 0.02310	1-Pb  = 0.46210	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.786767:	q_mu = 3.96476	q_A  = 3.60354	Pmu = 0.02311	1-Pb  = 0.46210	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.786787:	q_mu = 3.96492	q_A  = 3.60369	Pmu = 0.02310	1-Pb  = 0.46210	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.786777:	q_mu = 3.96484	q_A  = 3.60360	Pmu = 0.02311	1-Pb  = 0.46210	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.786782:	q_mu = 3.96488	q_A  = 3.60363	Pmu = 0.02310	1-Pb  = 0.46210	CLs  = 0.05000
