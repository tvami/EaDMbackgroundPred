CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.420898, Sigma for expected limits = 0.214748
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -23740.1 (r=0.0660486)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -23760.2 (r=0.00265234)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.266049:	q_mu = 0.00000	q_A  = 14.56425	Pmu = 0.50000	1-Pb  = 0.99993	CLs  = 0.50003
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.532097:	q_mu = 0.00000	q_A  = 29.64626	Pmu = 0.50000	1-Pb  = 1.00000	CLs  = 0.50000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.064195:	q_mu = 9.93063	q_A  = 55.13182	Pmu = 0.00081	1-Pb  = 0.99999	CLs  = 0.00081
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.565122:	q_mu = 0.00000	q_A  = 30.01620	Pmu = 0.50000	1-Pb  = 1.00000	CLs  = 0.50000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.814658:	q_mu = 0.00000	q_A  = 43.23064	Pmu = 0.50000	1-Pb  = 1.00000	CLs  = 0.50000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.439426:	q_mu = 4.24516	q_A  = 49.32744	Pmu = 0.01968	1-Pb  = 1.00000	CLs  = 0.01968
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.127042:	q_mu = 1.30141	q_A  = 46.31731	Pmu = 0.12698	1-Pb  = 1.00000	CLs  = 0.12698
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.314448:	q_mu = 3.07571	q_A  = 48.13198	Pmu = 0.03973	1-Pb  = 1.00000	CLs  = 0.03973
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.247313:	q_mu = 2.44301	q_A  = 47.48498	Pmu = 0.05902	1-Pb  = 1.00000	CLs  = 0.05902
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.283260:	q_mu = 2.78220	q_A  = 47.83183	Pmu = 0.04766	1-Pb  = 1.00000	CLs  = 0.04766
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.269622:	q_mu = 2.65361	q_A  = 47.70032	Pmu = 0.05166	1-Pb  = 1.00000	CLs  = 0.05166
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.276766:	q_mu = 2.72101	q_A  = 47.76919	Pmu = 0.04952	1-Pb  = 1.00000	CLs  = 0.04952
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.274027:	q_mu = 2.69517	q_A  = 47.74278	Pmu = 0.05033	1-Pb  = 1.00000	CLs  = 0.05033
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.275454:	q_mu = 2.70863	q_A  = 47.75652	Pmu = 0.04990	1-Pb  = 1.00000	CLs  = 0.04990
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.274907:	q_mu = 2.70347	q_A  = 47.75123	Pmu = 0.05007	1-Pb  = 1.00000	CLs  = 0.05007
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.275193:	q_mu = 2.70619	q_A  = 47.75397	Pmu = 0.04998	1-Pb  = 1.00000	CLs  = 0.04998
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.275081:	q_mu = 2.70513	q_A  = 47.75288	Pmu = 0.05001	1-Pb  = 1.00000	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.275138:	q_mu = 2.70570	q_A  = 47.75342	Pmu = 0.05000	1-Pb  = 1.00000	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.275114:	q_mu = 2.70547	q_A  = 47.75317	Pmu = 0.05000	1-Pb  = 1.00000	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.275125:	q_mu = 2.70557	q_A  = 47.75327	Pmu = 0.05000	1-Pb  = 1.00000	CLs  = 0.05000
