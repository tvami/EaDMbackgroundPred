CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.533203, Sigma for expected limits = 0.272047
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -2196.56 (r=1.37803e-05)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -2194.85 (r=9.88506e-05)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200014:	q_mu = 18.03928	q_A  = 12.87634	Pmu = 0.00001	1-Pb  = 0.23595	CLs  = 0.00003
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600014:	q_mu = 8.03749	q_A  = 4.62925	Pmu = 0.00162	1-Pb  = 0.21417	CLs  = 0.00757
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300014:	q_mu = 3.50212	q_A  = 1.46503	Pmu = 0.02009	1-Pb  = 0.20003	CLs  = 0.10043
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.450014:	q_mu = 5.69110	q_A  = 2.91244	Pmu = 0.00586	1-Pb  = 0.20779	CLs  = 0.02818
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.365877:	q_mu = 4.44103	q_A  = 2.06389	Pmu = 0.01179	1-Pb  = 0.20402	CLs  = 0.05778
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.396262:	q_mu = 4.88553	q_A  = 2.35892	Pmu = 0.00918	1-Pb  = 0.20539	CLs  = 0.04468
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.379549:	q_mu = 4.63988	q_A  = 2.19471	Pmu = 0.01054	1-Pb  = 0.20461	CLs  = 0.05149
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.385659:	q_mu = 4.72931	q_A  = 2.25412	Pmu = 0.01002	1-Pb  = 0.20488	CLs  = 0.04890
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.382324:	q_mu = 4.68037	q_A  = 2.22148	Pmu = 0.01030	1-Pb  = 0.20472	CLs  = 0.05030
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.383552:	q_mu = 4.69832	q_A  = 2.23338	Pmu = 0.01019	1-Pb  = 0.20477	CLs  = 0.04978
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.382889:	q_mu = 4.68856	q_A  = 2.22684	Pmu = 0.01025	1-Pb  = 0.20473	CLs  = 0.05006
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.383138:	q_mu = 4.69231	q_A  = 2.22921	Pmu = 0.01023	1-Pb  = 0.20473	CLs  = 0.04996
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.383005:	q_mu = 4.69029	q_A  = 2.22785	Pmu = 0.01024	1-Pb  = 0.20472	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.383056:	q_mu = 4.69101	q_A  = 2.22830	Pmu = 0.01023	1-Pb  = 0.20472	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.383032:	q_mu = 4.69062	q_A  = 2.22805	Pmu = 0.01024	1-Pb  = 0.20472	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.383044:	q_mu = 4.69077	q_A  = 2.22810	Pmu = 0.01024	1-Pb  = 0.20471	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.383048:	q_mu = 4.69092	q_A  = 2.22808	Pmu = 0.01023	1-Pb  = 0.20469	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.383046:	q_mu = 4.69084	q_A  = 2.22805	Pmu = 0.01023	1-Pb  = 0.20470	CLs  = 0.05000
