CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 1.61719, Sigma for expected limits = 0.825111
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -2202.51 (r=0.0787721)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -2201.14 (r=0.010776)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.278772:	q_mu = 2.12679	q_A  = 2.45855	Pmu = 0.07237	1-Pb  = 0.54365	CLs  = 0.13312
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.557544:	q_mu = 8.55848	q_A  = 9.00092	Pmu = 0.00172	1-Pb  = 0.52976	CLs  = 0.00325
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.318158:	q_mu = 2.26711	q_A  = 2.60615	Pmu = 0.06607	1-Pb  = 0.54327	CLs  = 0.12162
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.937851:	q_mu = 5.00136	q_A  = 5.40408	Pmu = 0.01266	1-Pb  = 0.53518	CLs  = 0.02366
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.587350:	q_mu = 3.34115	q_A  = 3.71429	Pmu = 0.03378	1-Pb  = 0.53958	CLs  = 0.06261
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.722266:	q_mu = 3.94611	q_A  = 4.33251	Pmu = 0.02349	1-Pb  = 0.53784	CLs  = 0.04367
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.654752:	q_mu = 3.63904	q_A  = 4.01799	Pmu = 0.02822	1-Pb  = 0.53858	CLs  = 0.05240
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.682142:	q_mu = 3.76203	q_A  = 4.14449	Pmu = 0.02621	1-Pb  = 0.53832	CLs  = 0.04870
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.668759:	q_mu = 3.70164	q_A  = 4.08245	Pmu = 0.02718	1-Pb  = 0.53846	CLs  = 0.05048
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.674266:	q_mu = 3.72639	q_A  = 4.10790	Pmu = 0.02678	1-Pb  = 0.53840	CLs  = 0.04974
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.671599:	q_mu = 3.71435	q_A  = 4.09554	Pmu = 0.02697	1-Pb  = 0.53843	CLs  = 0.05010
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.672705:	q_mu = 3.71931	q_A  = 4.10066	Pmu = 0.02689	1-Pb  = 0.53842	CLs  = 0.04995
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.672174:	q_mu = 3.71690	q_A  = 4.09820	Pmu = 0.02693	1-Pb  = 0.53843	CLs  = 0.05002
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.672398:	q_mu = 3.71789	q_A  = 4.09923	Pmu = 0.02692	1-Pb  = 0.53843	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.672294:	q_mu = 3.71741	q_A  = 4.09875	Pmu = 0.02692	1-Pb  = 0.53843	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.672342:	q_mu = 3.71760	q_A  = 4.09896	Pmu = 0.02692	1-Pb  = 0.53843	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.672324:	q_mu = 3.71750	q_A  = 4.09888	Pmu = 0.02692	1-Pb  = 0.53843	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.672331:	q_mu = 3.71752	q_A  = 4.09891	Pmu = 0.02692	1-Pb  = 0.53843	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.672337:	q_mu = 3.71752	q_A  = 4.09893	Pmu = 0.02692	1-Pb  = 0.53844	CLs  = 0.05000
