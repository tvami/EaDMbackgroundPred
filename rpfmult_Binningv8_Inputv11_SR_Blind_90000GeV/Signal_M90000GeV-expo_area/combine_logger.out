CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 5 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[415] : (in function: runLimitExpected) - [WARNING] Best fit of asimov dataset is at r = 0.111734 (0.005587 times rMax), while it should be at zero
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 3.5625, Sigma for expected limits = 1.81764
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -162803 (r=1.65376)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -162804 (r=0.807183)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.227921:	q_mu = 1.94420	q_A  = 6.84595	Pmu = 0.08161	1-Pb  = 0.88917	CLs  = 0.09178
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 10.455841:	q_mu = 9.74969	q_A  = 15.82962	Pmu = 0.00090	1-Pb  = 0.80406	CLs  = 0.00112
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 6.054802:	q_mu = 3.18017	q_A  = 8.33753	Pmu = 0.03727	1-Pb  = 0.86524	CLs  = 0.04307
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.854283:	q_mu = 0.00000	q_A  = 4.34766	Pmu = 0.50000	1-Pb  = 0.98147	CLs  = 0.50944
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 4.954543:	q_mu = 1.54084	q_A  = 6.34941	Pmu = 0.10725	1-Pb  = 0.89946	CLs  = 0.11923
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.705832:	q_mu = 2.65631	q_A  = 7.71044	Pmu = 0.05157	1-Pb  = 0.87430	CLs  = 0.05898
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.852578:	q_mu = 2.87632	q_A  = 7.97445	Pmu = 0.04495	1-Pb  = 0.87033	CLs  = 0.05164
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.921838:	q_mu = 2.98027	q_A  = 8.09891	Pmu = 0.04214	1-Pb  = 0.86854	CLs  = 0.04852
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.881302:	q_mu = 2.91940	q_A  = 8.02606	Pmu = 0.04376	1-Pb  = 0.86958	CLs  = 0.05032
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.895144:	q_mu = 2.94018	q_A  = 8.05092	Pmu = 0.04320	1-Pb  = 0.86922	CLs  = 0.04970
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.887034:	q_mu = 2.92800	q_A  = 8.03634	Pmu = 0.04353	1-Pb  = 0.86943	CLs  = 0.05006
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.889802:	q_mu = 2.93216	q_A  = 8.04132	Pmu = 0.04342	1-Pb  = 0.86936	CLs  = 0.04994
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.888180:	q_mu = 2.92972	q_A  = 8.03840	Pmu = 0.04348	1-Pb  = 0.86940	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.888734:	q_mu = 2.93055	q_A  = 8.03939	Pmu = 0.04346	1-Pb  = 0.86939	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.888409:	q_mu = 2.93006	q_A  = 8.03881	Pmu = 0.04347	1-Pb  = 0.86940	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.888520:	q_mu = 2.93023	q_A  = 8.03901	Pmu = 0.04347	1-Pb  = 0.86939	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.888455:	q_mu = 2.93013	q_A  = 8.03889	Pmu = 0.04347	1-Pb  = 0.86939	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.888477:	q_mu = 2.93017	q_A  = 8.03893	Pmu = 0.04347	1-Pb  = 0.86939	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 5.888464:	q_mu = 2.93015	q_A  = 8.03891	Pmu = 0.04347	1-Pb  = 0.86939	CLs  = 0.05000
