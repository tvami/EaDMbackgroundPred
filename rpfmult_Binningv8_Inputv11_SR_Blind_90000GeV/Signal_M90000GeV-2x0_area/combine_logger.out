CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 8 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 8 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 2.49219, Sigma for expected limits = 1.27155
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -18.862 (r=0.737262)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -19.063 (r=1.00439e-05)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.037164:	q_mu = 2.97057	q_A  = 4.69308	Pmu = 0.04240	1-Pb  = 0.67105	CLs  = 0.06318
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 6.074328:	q_mu = 8.31417	q_A  = 9.53165	Pmu = 0.00197	1-Pb  = 0.58079	CLs  = 0.00339
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.405795:	q_mu = 3.60709	q_A  = 5.28073	Pmu = 0.02877	1-Pb  = 0.65496	CLs  = 0.04392
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.071528:	q_mu = 1.39746	q_A  = 3.19420	Pmu = 0.11857	1-Pb  = 0.72744	CLs  = 0.16300
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 2.738662:	q_mu = 2.46492	q_A  = 4.22107	Pmu = 0.05821	1-Pb  = 0.68599	CLs  = 0.08485
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.167312:	q_mu = 3.19447	q_A  = 4.90016	Pmu = 0.03694	1-Pb  = 0.66506	CLs  = 0.05555
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.300504:	q_mu = 3.42561	q_A  = 5.11259	Pmu = 0.03210	1-Pb  = 0.65919	CLs  = 0.04869
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.252404:	q_mu = 3.34219	q_A  = 5.03577	Pmu = 0.03376	1-Pb  = 0.66125	CLs  = 0.05106
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.278994:	q_mu = 3.38822	q_A  = 5.07821	Pmu = 0.03283	1-Pb  = 0.66011	CLs  = 0.04974
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.269392:	q_mu = 3.37158	q_A  = 5.06286	Pmu = 0.03317	1-Pb  = 0.66052	CLs  = 0.05021
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.274714:	q_mu = 3.38080	q_A  = 5.07135	Pmu = 0.03298	1-Pb  = 0.66030	CLs  = 0.04995
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.272795:	q_mu = 3.37747	q_A  = 5.06828	Pmu = 0.03305	1-Pb  = 0.66038	CLs  = 0.05004
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.273860:	q_mu = 3.37932	q_A  = 5.06997	Pmu = 0.03301	1-Pb  = 0.66033	CLs  = 0.04999
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.273477:	q_mu = 3.37866	q_A  = 5.06936	Pmu = 0.03302	1-Pb  = 0.66035	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.273690:	q_mu = 3.37869	q_A  = 5.06970	Pmu = 0.03302	1-Pb  = 0.66037	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.273771:	q_mu = 3.37883	q_A  = 5.06982	Pmu = 0.03302	1-Pb  = 0.66037	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.273798:	q_mu = 3.37862	q_A  = 5.06986	Pmu = 0.03302	1-Pb  = 0.66039	CLs  = 0.05001
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.273829:	q_mu = 3.37867	q_A  = 5.06991	Pmu = 0.03302	1-Pb  = 0.66039	CLs  = 0.05000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 3.273843:	q_mu = 3.37869	q_A  = 5.06993	Pmu = 0.03302	1-Pb  = 0.66039	CLs  = 0.05000
