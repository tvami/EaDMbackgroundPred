CascadeMinimizer.cc[188] : (in function: improveOnce) - Minimization configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
CascadeMinimizer.cc[215] : (in function: improveOnce) - Minimization finished with status=0
CascadeMinimizer.cc[219] : (in function: improveOnce) - Minimization success! status=0
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binpass_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 3 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 1 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
ToyMCSamplerOpt.cc[146] : (in function: generateAsimov) - Using internal logic for binned/unbinned Asimov dataset generation
ToyMCSamplerOpt.cc[214] : (in function: generateWithHisto) - Generating asimov with histogram for pdf pdf_binfail_HIGH_obsOnly: in 4 x-bins
ToyMCSamplerOpt.cc[215] : (in function: generateWithHisto) -  , in 1 y-bins
AsymptoticLimits.cc[428] : (in function: runLimitExpected) - Median for expected limits = 0.000148773, Sigma for expected limits = 7.59061e-05
AsymptoticLimits.cc[191] : (in function: runLimit) - NLL at global minimum of data = -98391.2 (r=8.26726e-05)
AsymptoticLimits.cc[211] : (in function: runLimit) - NLL at global minimum of asimov = -98396.7 (r=5.62292e-07)
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 1.200083:	q_mu = 70505.17686	q_A  = 70520.75902	Pmu = 0.00000	1-Pb  = 0.51170	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.600083:	q_mu = 32321.08541	q_A  = 32338.56604	Pmu = 0.00000	1-Pb  = 0.51938	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.300083:	q_mu = 14607.43065	q_A  = 14626.44302	Pmu = 0.00000	1-Pb  = 0.53134	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.150083:	q_mu = 6392.22786	q_A  = 6412.29231	Pmu = 0.00000	1-Pb  = 0.54989	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.075083:	q_mu = 2712.00072	q_A  = 2732.26948	Pmu = 0.00000	1-Pb  = 0.57701	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.037583:	q_mu = 1141.09676	q_A  = 1160.24015	Pmu = 0.00000	1-Pb  = 0.61110	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.018833:	q_mu = 513.27731	q_A  = 529.56617	Pmu = 0.00000	1-Pb  = 0.63933	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.009458:	q_mu = 284.67321	q_A  = 298.92213	Pmu = 0.00000	1-Pb  = 0.66170	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.004770:	q_mu = 161.68732	q_A  = 173.91667	Pmu = 0.00000	1-Pb  = 0.68158	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.002426:	q_mu = 97.84725	q_A  = 101.23484	Pmu = 0.00000	1-Pb  = 0.56741	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.001255:	q_mu = 45.26720	q_A  = 54.78625	Pmu = 0.00000	1-Pb  = 0.74974	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000669:	q_mu = 20.07678	q_A  = 27.85349	Pmu = 0.00000	1-Pb  = 0.78725	CLs  = 0.00000
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000376:	q_mu = 7.70404	q_A  = 13.78279	Pmu = 0.00275	1-Pb  = 0.82560	CLs  = 0.00334
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000229:	q_mu = 1.98715	q_A  = 7.05994	Pmu = 0.07932	1-Pb  = 0.89387	CLs  = 0.08874
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000302:	q_mu = 4.69531	q_A  = 10.35398	Pmu = 0.01512	1-Pb  = 0.85335	CLs  = 0.01772
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000265:	q_mu = 3.26959	q_A  = 8.63859	Pmu = 0.03529	1-Pb  = 0.87096	CLs  = 0.04052
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000250:	q_mu = 2.72950	q_A  = 7.98394	Pmu = 0.04926	1-Pb  = 0.87970	CLs  = 0.05599
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000257:	q_mu = 2.98736	q_A  = 8.29676	Pmu = 0.04196	1-Pb  = 0.87534	CLs  = 0.04793
AsymptoticLimits.cc[337] : (in function: getCLs) - At r = 0.000254:	q_mu = 2.87945	q_A  = 8.15912	Pmu = 0.04486	1-Pb  = 0.87688	CLs  = 0.05116
